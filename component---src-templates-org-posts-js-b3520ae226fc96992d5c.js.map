{"version":3,"file":"component---src-templates-org-posts-js-b3520ae226fc96992d5c.js","mappings":"uJAmCA,IAhCe,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,uBAAKI,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAAiBN,GACnC,wBAAMS,IAAI,QAAQN,GAQvB,C,4FC7Bc,SAASO,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,KAAMV,EAAW,EAAXA,SAC/BW,EAASD,EAAKE,WAAdD,KACAV,EAAUS,EAAKE,WAAWC,SAA1BZ,MACFa,EAAYJ,EAAKK,KAAKC,aAAaf,MAEzC,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOa,GACjC,0BAAKb,GACL,2BACEgB,wBAAyB,CAAEC,OAAQP,GACnCQ,SAAS,gBAIhB,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/org-posts.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main dir=\"auto\">{children}</main>\n      {/*<footer>*/}\n      {/*  Â© {new Date().getFullYear()}, Built with*/}\n      {/*  {` `}*/}\n      {/*  <a href=\"https://www.gatsbyjs.com\">Gatsby</a>*/}\n      {/*</footer>*/}\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\n\nexport default function orgPosts({ data, location}) {\n  const { html } = data.orgContent\n  const { title } = data.orgContent.metadata\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>{title}</h1>\n      <section\n        dangerouslySetInnerHTML={{ __html: html }}\n        itemProp=\"articleBody\"\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProjectPages($slug: String!) {\n    orgContent(metadata: { slug: { eq: $slug } }) {\n      html\n      metadata {\n        title\n        slug\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","dir","orgPosts","data","html","orgContent","metadata","siteTitle","site","siteMetadata","dangerouslySetInnerHTML","__html","itemProp"],"sourceRoot":""}